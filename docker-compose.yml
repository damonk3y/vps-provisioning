services:
  beyoutique-crm:
    image: beyoutique-crm
    ports:
      - "8080:8080"
    depends_on:
      - db
      - grafana
      - minio
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - MINI_ROOT_USER=${MINI_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}

  db:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data:Z
      - ./postgres/config/postgresql.conf:/etc/postgresql/postgresql.conf
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    ports:
      - "5432:5432"
    depends_on:
      - grafana
      - minio
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  nginx:
    image: beyoutique-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./www:/var/www/html
    depends_on:
      - db
      - beyoutique-crm
      - grafana
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  minio:
    image: minio/minio
    container_name: minio-storage
    environment:
      - MINIO_ROOT_USER=${MINI_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - grafana
    volumes:
      - minio_data:/data
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  loki:
    image: grafana/loki:2.8.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml -config.expand-env=true
    volumes:
      - ./loki-config.yml:/etc/loki/config.yml
      - loki_data:/loki
    networks:
      - tardis_network
    restart: unless-stopped
    user: root
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - loki
    networks:
      - tardis_network
    restart: unless-stopped
    deploy:
      labels:
        - "logging=loki"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        tag: "{{.Name}}"

networks:
  tardis_network:
    name: tardis_shared_network
    driver: bridge
    external: true

volumes:
  postgres_data:
    driver: local
  minio_data:
    driver: local
  loki_data:
    driver: local
  grafana_data:
    driver: local
